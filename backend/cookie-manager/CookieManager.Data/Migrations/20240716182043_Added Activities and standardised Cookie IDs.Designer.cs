// <auto-generated />
using System;
using CookieManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookieManager.Data.Migrations
{
    [DbContext(typeof(CookieManagerDbContext))]
    [Migration("20240716182043_Added Activities and standardised Cookie IDs")]
    partial class AddedActivitiesandstandardisedCookieIDs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookieManager.Core.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a84977fc-a97d-4bf1-9882-1c1d87783c81"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2024, 5, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7634),
                            Description = "Activity 2 months ago",
                            Title = "Past Activity 1",
                            Venue = "Pub"
                        },
                        new
                        {
                            Id = new Guid("99db7608-675a-4a72-9260-3066be5b140d"),
                            Category = "culture",
                            City = "Paris",
                            Date = new DateTime(2024, 6, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7646),
                            Description = "Activity 1 month ago",
                            Title = "Past Activity 2",
                            Venue = "Louvre"
                        },
                        new
                        {
                            Id = new Guid("a19029ae-75e3-4585-93c2-006bf26c1efa"),
                            Category = "culture",
                            City = "London",
                            Date = new DateTime(2024, 8, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7649),
                            Description = "Activity 1 month in future",
                            Title = "Future Activity 1",
                            Venue = "Natural History Museum"
                        },
                        new
                        {
                            Id = new Guid("bab38014-9437-49f8-ad16-bb5d97d9407d"),
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2024, 9, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7651),
                            Description = "Activity 2 months in future",
                            Title = "Future Activity 2",
                            Venue = "O2 Arena"
                        },
                        new
                        {
                            Id = new Guid("74714ff8-8b95-482f-9e8e-210209a41ac6"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2024, 10, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7664),
                            Description = "Activity 3 months in future",
                            Title = "Future Activity 3",
                            Venue = "Another pub"
                        },
                        new
                        {
                            Id = new Guid("3dd00032-6164-424a-a199-cbbfc2bdf60a"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2024, 11, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7670),
                            Description = "Activity 4 months in future",
                            Title = "Future Activity 4",
                            Venue = "Yet another pub"
                        },
                        new
                        {
                            Id = new Guid("79f99a97-412b-4a84-8e9b-325026da928f"),
                            Category = "drinks",
                            City = "London",
                            Date = new DateTime(2024, 12, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7672),
                            Description = "Activity 5 months in future",
                            Title = "Future Activity 5",
                            Venue = "Just another pub"
                        },
                        new
                        {
                            Id = new Guid("afcdc9cb-8f6c-4ad7-96bd-150ee2e95811"),
                            Category = "music",
                            City = "London",
                            Date = new DateTime(2025, 1, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7675),
                            Description = "Activity 6 months in future",
                            Title = "Future Activity 6",
                            Venue = "Roundhouse Camden"
                        },
                        new
                        {
                            Id = new Guid("b19f1289-0ca8-4fa2-8172-95e2e2a637a3"),
                            Category = "travel",
                            City = "London",
                            Date = new DateTime(2025, 2, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7678),
                            Description = "Activity 2 months ago",
                            Title = "Future Activity 7",
                            Venue = "Somewhere on the Thames"
                        },
                        new
                        {
                            Id = new Guid("e13c26de-fe4d-484c-8bc2-4dc38fbcff17"),
                            Category = "film",
                            City = "London",
                            Date = new DateTime(2025, 3, 16, 18, 20, 43, 740, DateTimeKind.Utc).AddTicks(7681),
                            Description = "Activity 8 months in future",
                            Title = "Future Activity 8",
                            Venue = "Cinema"
                        });
                });

            modelBuilder.Entity("CookieManager.Core.Entities.Cookie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CookieImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cookies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2bdeded-2a11-410a-89d1-03cca513302d"),
                            CookieImageUrl = "https://hips.hearstapps.com/hmg-prod/images/macaroon-vs-macaron-1676039139.jpeg",
                            Name = "Macaroon"
                        },
                        new
                        {
                            Id = new Guid("4fc35fc3-caed-4991-8b1b-296bfcf829a5"),
                            CookieImageUrl = "https://en.wikipedia.org/wiki/Fortune_cookie#/media/File:Fortune_cookies.jpg",
                            Name = "Fortune cookie"
                        },
                        new
                        {
                            Id = new Guid("ef8b195c-119c-440c-aa2a-3e1b6ea6cdae"),
                            CookieImageUrl = "https://www.shugarysweets.com/wp-content/uploads/2020/05/chocolate-chip-cookies-recipe.jpg",
                            Name = "Chocolate chip"
                        });
                });

            modelBuilder.Entity("CookieManager.Core.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
